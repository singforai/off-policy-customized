60
[48]
double Q learning will be used
warm up...
warmup average episode rewards: 1.454545497894287
 Env StarCraft2 Map 3m Algo vdn Exp check runs total num timesteps 902/2000000, FPS 119.
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
 Env StarCraft2 Map 3m Algo vdn Exp check runs total num timesteps 1005/2000000, FPS 125.
average_episode_rewards is 1.6438355
win_rate is 0.0
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
Traceback (most recent call last):
  File "/home/uosai/바탕화면/off-policy/offpolicy/scripts/train/train_smac.py", line 191, in <module>
    main(sys.argv[1:])
  File "/home/uosai/바탕화면/off-policy/offpolicy/scripts/train/train_smac.py", line 177, in main
    total_num_steps = runner.run()
  File "/home/uosai/바탕화면/off-policy/offpolicy/runner/rnn/base_runner.py", line 190, in run
    self.train()
  File "/home/uosai/바탕화면/off-policy/offpolicy/runner/rnn/base_runner.py", line 270, in batch_train_q
    sample = self.buffer.sample(self.batch_size)
  File "/home/uosai/바탕화면/off-policy/offpolicy/utils/rec_buffer.py", line 80, in sample
    self.policy_buffers[p_id].sample_inds(inds)
  File "/home/uosai/바탕화면/off-policy/offpolicy/utils/rec_buffer.py", line 207, in sample_inds
    obs = _cast(self.obs[:, sample_inds])
KeyboardInterrupt
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])
torch.Size([60, 32, 1])