self.policy_ids:  ['policy_0', 'policy_1', 'policy_2']
[]
========== None
[Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0826,  0.0871, -0.1617,  ...,  0.0494,  0.2217, -0.0763],
        [-0.0053,  0.2093, -0.0294,  ...,  0.1448, -0.2225, -0.0686],
        [ 0.0789,  0.1882, -0.2279,  ..., -0.0478, -0.2661,  0.2293],
        ...,
        [-0.1790, -0.0967, -0.0904,  ..., -0.0265,  0.2016, -0.3210],
        [-0.1852, -0.2963, -0.0043,  ...,  0.0748,  0.0810,  0.0187],
        [ 0.0408, -0.2930,  0.0881,  ..., -0.0473,  0.2421,  0.3054]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0190, -0.1656,  0.0610,  ...,  0.0550, -0.1157,  0.0986],
        [ 0.1128,  0.2431, -0.0858,  ...,  0.2608, -0.0778,  0.0532],
        [-0.0664,  0.2328,  0.0886,  ...,  0.2164,  0.0494,  0.1320],
        ...,
        [-0.2418, -0.1341,  0.0608,  ...,  0.1238,  0.0451, -0.0908],
        [-0.1270,  0.0466, -0.0419,  ...,  0.1516, -0.0332, -0.0059],
        [ 0.3493, -0.5917, -0.0860,  ...,  0.0125,  0.1412,  0.2904]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0190, -0.1656,  0.0610,  ...,  0.0550, -0.1157,  0.0986],
        [ 0.1128,  0.2431, -0.0858,  ...,  0.2608, -0.0778,  0.0532],
        [-0.0664,  0.2328,  0.0886,  ...,  0.2164,  0.0494,  0.1320],
        ...,
        [-0.2418, -0.1341,  0.0608,  ...,  0.1238,  0.0451, -0.0908],
        [-0.1270,  0.0466, -0.0419,  ...,  0.1516, -0.0332, -0.0059],
        [ 0.3493, -0.5917, -0.0860,  ...,  0.0125,  0.1412,  0.2904]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0311,  0.0324, -0.0422,  ..., -0.1006,  0.0419,  0.0770],
        [ 0.0928,  0.0933,  0.0867,  ...,  0.0940,  0.0925, -0.0263],
        [ 0.0224,  0.0843,  0.0091,  ..., -0.0279, -0.0922,  0.0781],
        ...,
        [ 0.0480, -0.0517, -0.1258,  ..., -0.0740, -0.0247, -0.0462],
        [-0.1410, -0.0405, -0.0196,  ...,  0.0658, -0.0602,  0.1226],
        [ 0.0401, -0.0993, -0.0025,  ..., -0.0470, -0.0188, -0.0974]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0285,  0.0382,  0.0646,  ...,  0.1206,  0.0279,  0.1192],
        [-0.0660,  0.0958,  0.0426,  ...,  0.1463,  0.0895, -0.1412],
        [ 0.0325, -0.0697,  0.1548,  ...,  0.0265,  0.0478,  0.0040],
        ...,
        [-0.0402,  0.0597, -0.1099,  ...,  0.0148,  0.0503,  0.1436],
        [-0.0557, -0.0426, -0.0253,  ...,  0.0376, -0.0092,  0.0092],
        [-0.0255,  0.0278, -0.0583,  ...,  0.0973,  0.0088,  0.1194]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 1.2241e-03, -3.9249e-04, -3.3916e-04, -8.5608e-04,  6.9008e-04,
          8.7648e-04, -5.6280e-04,  1.4303e-03, -2.9801e-03,  7.1606e-04,
         -2.0050e-04, -2.5515e-03, -8.3271e-04,  7.3054e-04,  1.6377e-04,
         -6.9589e-04, -1.6293e-04,  1.1683e-04,  5.5675e-04,  1.6358e-03,
         -1.5218e-03, -2.1838e-04,  8.1654e-04, -1.0837e-03,  2.1906e-03,
          1.5522e-03, -2.0660e-03,  8.2757e-05,  1.1086e-03,  6.6152e-05,
         -9.4833e-04, -1.0836e-03,  1.8168e-04, -9.4189e-04,  1.0117e-03,
          2.5805e-04,  3.9155e-04,  1.0915e-04, -6.8017e-04, -9.2268e-04,
          4.4826e-04, -2.4517e-03, -3.4195e-04, -1.5345e-04,  6.1356e-05,
         -7.2962e-04,  1.3119e-04,  2.1342e-03, -5.0176e-04,  1.5328e-03,
          1.6706e-03, -3.2064e-03, -1.2944e-03,  7.0485e-04,  1.1731e-03,
         -3.2655e-04,  1.8742e-03, -1.3980e-03,  3.0528e-05, -3.5790e-03,
          3.2338e-04, -2.5156e-04, -1.6058e-04, -1.2000e-03],
        [ 1.6772e-03,  6.2255e-04, -2.2724e-04, -1.2909e-03, -5.5155e-04,
         -2.0224e-03, -8.5541e-04,  4.7282e-04,  2.0573e-03,  2.1635e-04,
         -2.2794e-03,  5.8308e-04,  1.3265e-03,  1.3443e-03,  6.7508e-04,
         -4.9532e-04,  6.0192e-04,  1.8609e-03, -3.2443e-04,  8.8870e-04,
         -2.5674e-04, -9.7300e-04,  8.9698e-04, -5.6375e-04, -1.1214e-03,
         -1.2057e-03,  1.9398e-03, -1.8117e-04,  6.5482e-04, -4.0140e-04,
         -1.0095e-05, -2.0437e-03,  6.2176e-04, -1.6675e-04, -3.5299e-04,
         -7.0270e-04, -3.2386e-03, -1.5298e-04, -1.1923e-03, -9.2517e-04,
         -1.1058e-03, -5.8594e-04, -5.7807e-04, -1.2274e-03, -1.3233e-03,
          2.1526e-03, -2.4138e-03,  8.5461e-04,  8.4649e-04,  2.1974e-03,
          5.1628e-05,  3.4427e-04,  3.0628e-04, -1.5442e-03,  9.5077e-04,
          7.5607e-04,  2.0963e-03,  8.3805e-04, -7.1449e-04,  2.8050e-04,
         -8.0065e-04,  2.0787e-03, -1.7030e-04, -2.6555e-03],
        [ 8.8468e-04, -1.5376e-03,  1.5967e-04,  2.6401e-03, -4.9631e-04,
         -2.6123e-04, -9.9982e-04, -1.8394e-03,  1.4935e-03,  1.3605e-03,
          2.5976e-04, -1.6097e-03,  3.8813e-04, -5.1439e-04,  5.2295e-04,
          1.1239e-03, -1.0466e-03, -1.1372e-03,  1.2675e-04,  3.4151e-03,
         -1.9265e-03,  2.7296e-04,  1.2631e-04, -1.1686e-03, -1.8901e-03,
          3.4236e-04,  1.4703e-03, -2.6832e-06, -1.6296e-03, -4.8040e-04,
         -4.9760e-04,  1.1409e-03, -8.5288e-05,  1.7835e-03,  9.2220e-04,
          1.2351e-03, -1.4241e-03,  1.3166e-03,  1.1415e-03, -1.0143e-03,
         -3.9742e-04, -3.1675e-04,  2.1321e-03, -9.9024e-04,  5.3602e-04,
         -4.0749e-04, -4.6052e-04, -2.6439e-04,  4.9646e-04, -7.9998e-04,
          3.6103e-04,  8.5769e-04, -2.9962e-03,  8.4342e-04,  1.5883e-03,
         -1.3800e-03,  1.4373e-03,  7.4257e-06, -4.7810e-05, -4.2927e-04,
          1.3373e-03,  1.5886e-03,  3.8111e-04,  2.4879e-03],
        [-2.1691e-03, -1.1561e-03,  2.6133e-04, -1.1817e-03, -9.2352e-04,
          1.6682e-03, -2.1378e-03, -2.9436e-03,  1.3815e-03, -9.5068e-04,
         -5.8985e-04,  6.5699e-04, -1.1827e-03,  8.8809e-04, -2.7521e-04,
          4.2566e-04, -7.2269e-04,  1.6220e-03,  6.6476e-04, -2.7360e-03,
         -2.1367e-03, -1.7455e-03,  3.8307e-04, -1.9238e-03, -1.4183e-03,
          1.9274e-04, -2.6808e-03,  7.8105e-04,  1.3613e-03,  9.6145e-04,
          7.0011e-04, -1.0840e-03,  3.1888e-04,  7.3087e-04,  1.6627e-03,
         -2.3318e-03, -2.2271e-04,  1.0101e-04, -2.1247e-05, -8.6508e-04,
         -1.2631e-03,  1.1249e-04,  6.0452e-04, -1.1190e-04,  8.5820e-04,
          1.2084e-03,  1.3629e-03, -1.7475e-03, -2.1997e-03, -2.9240e-04,
         -9.9286e-04, -5.2649e-04,  5.9745e-04, -7.1284e-06,  4.8062e-04,
         -4.1013e-04,  1.2042e-03, -5.1450e-04, -9.0805e-05, -1.1083e-03,
         -7.0325e-04,  9.0359e-04,  1.3208e-03,  1.0327e-03],
        [ 4.8075e-04, -1.5636e-04,  5.6092e-04, -2.6393e-04,  1.0679e-03,
          1.3478e-03, -2.4867e-03,  6.7502e-04, -6.8737e-04,  1.4393e-03,
          1.1278e-03, -2.1883e-03,  5.9360e-04,  6.3813e-04, -1.0866e-03,
          1.9878e-05, -7.2318e-04,  2.6809e-03, -1.1438e-03,  7.3039e-05,
         -1.7132e-03,  2.1576e-03, -2.2239e-03,  1.2086e-03, -8.6233e-04,
         -2.1981e-03,  1.9285e-04, -1.9624e-03,  7.1151e-04,  1.8657e-03,
          8.3639e-04,  7.4306e-04,  3.7102e-03,  5.7239e-04,  6.1653e-04,
         -8.3319e-05,  1.3967e-04, -7.6406e-04, -1.4036e-03,  1.1402e-03,
         -2.0670e-04,  2.8623e-03, -1.4062e-03,  6.8336e-04,  4.2082e-04,
         -1.1133e-03, -1.4089e-03,  3.6781e-04,  1.0985e-03, -4.8267e-04,
          2.4394e-04,  5.4904e-04,  3.4994e-04,  1.8306e-04, -6.0089e-04,
          2.4776e-05,  3.8112e-04,  1.5717e-03,  4.8882e-04, -1.5510e-03,
         -7.6518e-04,  4.3366e-05,  3.3201e-04,  8.0601e-04],
        [ 1.6424e-05,  3.8347e-04, -1.3025e-04, -3.1424e-03,  1.5780e-05,
          2.3866e-04, -1.2253e-03, -2.8462e-04,  2.5678e-04,  2.2358e-05,
         -9.7132e-04, -5.1130e-04, -1.2094e-03,  7.6672e-04,  6.9370e-04,
         -1.7962e-03,  1.0876e-03, -3.4563e-04, -4.5482e-04, -4.1761e-04,
         -3.2196e-04,  4.7263e-04, -2.8386e-03,  1.0029e-03, -1.4447e-03,
         -1.2704e-03,  1.8270e-03, -5.8751e-04,  6.7934e-04, -4.3495e-04,
         -3.5504e-04,  9.3224e-05, -9.2806e-04, -1.2232e-03,  1.4232e-03,
          2.6925e-03, -1.2072e-03,  1.4474e-04,  2.5774e-03, -1.8696e-05,
         -9.8563e-05, -2.6316e-03,  1.5185e-03,  3.7325e-03,  1.2337e-03,
          1.1603e-03, -1.0759e-03, -5.9560e-06, -5.5662e-04, -1.5892e-03,
          1.3074e-04, -8.2813e-04,  1.4230e-03, -7.9751e-04,  1.3226e-03,
         -1.7033e-03, -8.3261e-04, -6.4529e-04, -1.7594e-07, -1.8340e-04,
          3.1897e-04, -1.0799e-03, -1.1251e-03,  7.5491e-04],
        [ 9.5899e-04,  3.5347e-04, -1.3796e-04,  4.1998e-04,  5.8379e-04,
         -1.0892e-03, -1.9544e-03, -2.4286e-04,  2.4668e-03,  1.9168e-03,
          8.1100e-04, -5.6872e-04,  1.6593e-05,  1.6195e-03,  4.3298e-04,
         -6.1165e-04,  1.1887e-03, -2.5836e-03,  5.9807e-04,  1.4070e-04,
          8.1196e-04,  5.0582e-04, -9.1305e-04, -1.4052e-05,  1.7681e-04,
         -9.4790e-04,  8.4551e-04, -1.0935e-03,  4.1593e-04, -3.1406e-05,
          3.6492e-05, -5.4500e-04, -9.1014e-04, -1.0936e-03,  9.4546e-04,
         -8.7539e-05,  3.3613e-03, -1.4589e-03, -1.7623e-03, -8.4566e-04,
         -7.6482e-04, -8.7470e-04, -6.9144e-04, -4.6296e-04, -7.5374e-04,
          1.8090e-05,  1.2048e-03, -2.7293e-04, -2.5732e-03,  1.8977e-03,
          9.6628e-04, -3.5210e-04, -1.0115e-04, -1.3699e-04, -3.2795e-03,
         -3.3759e-03,  1.1564e-03,  1.0438e-03, -3.1188e-04,  1.2924e-03,
          1.8172e-04,  1.2615e-04,  1.9138e-03,  4.7437e-04],
        [ 5.2532e-05,  2.0138e-05,  1.2690e-03,  3.5056e-04,  7.0208e-04,
         -8.6923e-04, -8.9231e-04,  8.7333e-04, -1.6174e-04,  1.5591e-04,
         -2.1117e-03, -1.7689e-03, -1.4624e-03,  1.3270e-03, -2.5036e-03,
         -1.5475e-03,  1.1624e-03, -2.8537e-03, -3.8475e-04, -5.0810e-04,
         -1.7571e-04, -1.1350e-03,  2.6174e-04, -1.4310e-03, -9.5727e-04,
         -8.8945e-04,  6.4532e-04,  1.5897e-03,  3.2953e-05,  1.1635e-03,
         -1.8124e-03,  1.9490e-03,  1.6742e-04, -3.0517e-03, -2.0479e-03,
         -2.6047e-04, -6.9983e-04,  1.3521e-04, -1.6474e-03,  8.7968e-04,
         -1.4586e-03,  4.6325e-04, -1.1085e-04, -2.6615e-03,  1.8865e-03,
          1.0464e-03,  5.4234e-06, -1.2281e-03,  4.2599e-04, -3.7746e-04,
         -1.3982e-03, -5.4260e-05, -2.0657e-04,  1.2219e-03, -1.2345e-04,
          9.1006e-04, -3.9967e-04, -2.5279e-04,  1.3440e-03, -8.6334e-04,
         -1.0121e-03, -7.3607e-04, -2.0909e-03,  1.5018e-03],
        [-4.2156e-05,  1.3325e-03, -2.8341e-04,  1.6215e-03, -1.8072e-03,
         -4.0201e-04, -3.0376e-03, -1.9762e-03, -1.1017e-03, -1.3361e-04,
          9.9077e-04, -1.0431e-04,  5.4981e-04, -1.5396e-03, -1.6667e-03,
          1.0825e-03,  3.3871e-04,  9.9414e-04, -1.2609e-03,  1.4226e-03,
          1.1146e-03,  2.0428e-03,  9.4840e-04, -4.1771e-04,  6.1436e-04,
         -4.1660e-04,  6.1770e-04,  2.8170e-03,  3.1156e-03, -7.7324e-04,
         -3.6797e-04,  6.2758e-04, -6.6193e-04, -5.6361e-04,  8.0183e-04,
          3.5300e-04,  1.2491e-03, -1.3794e-03,  1.4287e-03, -9.7615e-05,
         -3.4646e-04, -2.6165e-04,  4.9091e-04, -1.2315e-03,  1.5807e-03,
          6.3122e-04, -1.2258e-03, -7.2643e-04,  3.9095e-04, -1.1701e-03,
         -4.5472e-04, -1.8600e-03,  1.8395e-03,  1.5337e-04, -3.6852e-04,
          1.2432e-03,  1.7445e-03,  1.1209e-03, -1.8088e-04,  1.0793e-03,
          2.1266e-03, -1.0961e-03,  7.9835e-06, -1.9466e-03]], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0',
       requires_grad=True)]
========== None
[Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0826,  0.0871, -0.1617,  ...,  0.0494,  0.2217, -0.0763],
        [-0.0053,  0.2093, -0.0294,  ...,  0.1448, -0.2225, -0.0686],
        [ 0.0789,  0.1882, -0.2279,  ..., -0.0478, -0.2661,  0.2293],
        ...,
        [-0.1790, -0.0967, -0.0904,  ..., -0.0265,  0.2016, -0.3210],
        [-0.1852, -0.2963, -0.0043,  ...,  0.0748,  0.0810,  0.0187],
        [ 0.0408, -0.2930,  0.0881,  ..., -0.0473,  0.2421,  0.3054]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0190, -0.1656,  0.0610,  ...,  0.0550, -0.1157,  0.0986],
        [ 0.1128,  0.2431, -0.0858,  ...,  0.2608, -0.0778,  0.0532],
        [-0.0664,  0.2328,  0.0886,  ...,  0.2164,  0.0494,  0.1320],
        ...,
        [-0.2418, -0.1341,  0.0608,  ...,  0.1238,  0.0451, -0.0908],
        [-0.1270,  0.0466, -0.0419,  ...,  0.1516, -0.0332, -0.0059],
        [ 0.3493, -0.5917, -0.0860,  ...,  0.0125,  0.1412,  0.2904]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0190, -0.1656,  0.0610,  ...,  0.0550, -0.1157,  0.0986],
        [ 0.1128,  0.2431, -0.0858,  ...,  0.2608, -0.0778,  0.0532],
        [-0.0664,  0.2328,  0.0886,  ...,  0.2164,  0.0494,  0.1320],
        ...,
        [-0.2418, -0.1341,  0.0608,  ...,  0.1238,  0.0451, -0.0908],
        [-0.1270,  0.0466, -0.0419,  ...,  0.1516, -0.0332, -0.0059],
        [ 0.3493, -0.5917, -0.0860,  ...,  0.0125,  0.1412,  0.2904]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0311,  0.0324, -0.0422,  ..., -0.1006,  0.0419,  0.0770],
        [ 0.0928,  0.0933,  0.0867,  ...,  0.0940,  0.0925, -0.0263],
        [ 0.0224,  0.0843,  0.0091,  ..., -0.0279, -0.0922,  0.0781],
        ...,
        [ 0.0480, -0.0517, -0.1258,  ..., -0.0740, -0.0247, -0.0462],
        [-0.1410, -0.0405, -0.0196,  ...,  0.0658, -0.0602,  0.1226],
        [ 0.0401, -0.0993, -0.0025,  ..., -0.0470, -0.0188, -0.0974]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0285,  0.0382,  0.0646,  ...,  0.1206,  0.0279,  0.1192],
        [-0.0660,  0.0958,  0.0426,  ...,  0.1463,  0.0895, -0.1412],
        [ 0.0325, -0.0697,  0.1548,  ...,  0.0265,  0.0478,  0.0040],
        ...,
        [-0.0402,  0.0597, -0.1099,  ...,  0.0148,  0.0503,  0.1436],
        [-0.0557, -0.0426, -0.0253,  ...,  0.0376, -0.0092,  0.0092],
        [-0.0255,  0.0278, -0.0583,  ...,  0.0973,  0.0088,  0.1194]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 1.2241e-03, -3.9249e-04, -3.3916e-04, -8.5608e-04,  6.9008e-04,
          8.7648e-04, -5.6280e-04,  1.4303e-03, -2.9801e-03,  7.1606e-04,
         -2.0050e-04, -2.5515e-03, -8.3271e-04,  7.3054e-04,  1.6377e-04,
         -6.9589e-04, -1.6293e-04,  1.1683e-04,  5.5675e-04,  1.6358e-03,
         -1.5218e-03, -2.1838e-04,  8.1654e-04, -1.0837e-03,  2.1906e-03,
          1.5522e-03, -2.0660e-03,  8.2757e-05,  1.1086e-03,  6.6152e-05,
         -9.4833e-04, -1.0836e-03,  1.8168e-04, -9.4189e-04,  1.0117e-03,
          2.5805e-04,  3.9155e-04,  1.0915e-04, -6.8017e-04, -9.2268e-04,
          4.4826e-04, -2.4517e-03, -3.4195e-04, -1.5345e-04,  6.1356e-05,
         -7.2962e-04,  1.3119e-04,  2.1342e-03, -5.0176e-04,  1.5328e-03,
          1.6706e-03, -3.2064e-03, -1.2944e-03,  7.0485e-04,  1.1731e-03,
         -3.2655e-04,  1.8742e-03, -1.3980e-03,  3.0528e-05, -3.5790e-03,
          3.2338e-04, -2.5156e-04, -1.6058e-04, -1.2000e-03],
        [ 1.6772e-03,  6.2255e-04, -2.2724e-04, -1.2909e-03, -5.5155e-04,
         -2.0224e-03, -8.5541e-04,  4.7282e-04,  2.0573e-03,  2.1635e-04,
         -2.2794e-03,  5.8308e-04,  1.3265e-03,  1.3443e-03,  6.7508e-04,
         -4.9532e-04,  6.0192e-04,  1.8609e-03, -3.2443e-04,  8.8870e-04,
         -2.5674e-04, -9.7300e-04,  8.9698e-04, -5.6375e-04, -1.1214e-03,
         -1.2057e-03,  1.9398e-03, -1.8117e-04,  6.5482e-04, -4.0140e-04,
         -1.0095e-05, -2.0437e-03,  6.2176e-04, -1.6675e-04, -3.5299e-04,
         -7.0270e-04, -3.2386e-03, -1.5298e-04, -1.1923e-03, -9.2517e-04,
         -1.1058e-03, -5.8594e-04, -5.7807e-04, -1.2274e-03, -1.3233e-03,
          2.1526e-03, -2.4138e-03,  8.5461e-04,  8.4649e-04,  2.1974e-03,
          5.1628e-05,  3.4427e-04,  3.0628e-04, -1.5442e-03,  9.5077e-04,
          7.5607e-04,  2.0963e-03,  8.3805e-04, -7.1449e-04,  2.8050e-04,
         -8.0065e-04,  2.0787e-03, -1.7030e-04, -2.6555e-03],
        [ 8.8468e-04, -1.5376e-03,  1.5967e-04,  2.6401e-03, -4.9631e-04,
         -2.6123e-04, -9.9982e-04, -1.8394e-03,  1.4935e-03,  1.3605e-03,
          2.5976e-04, -1.6097e-03,  3.8813e-04, -5.1439e-04,  5.2295e-04,
          1.1239e-03, -1.0466e-03, -1.1372e-03,  1.2675e-04,  3.4151e-03,
         -1.9265e-03,  2.7296e-04,  1.2631e-04, -1.1686e-03, -1.8901e-03,
          3.4236e-04,  1.4703e-03, -2.6832e-06, -1.6296e-03, -4.8040e-04,
         -4.9760e-04,  1.1409e-03, -8.5288e-05,  1.7835e-03,  9.2220e-04,
          1.2351e-03, -1.4241e-03,  1.3166e-03,  1.1415e-03, -1.0143e-03,
         -3.9742e-04, -3.1675e-04,  2.1321e-03, -9.9024e-04,  5.3602e-04,
         -4.0749e-04, -4.6052e-04, -2.6439e-04,  4.9646e-04, -7.9998e-04,
          3.6103e-04,  8.5769e-04, -2.9962e-03,  8.4342e-04,  1.5883e-03,
         -1.3800e-03,  1.4373e-03,  7.4257e-06, -4.7810e-05, -4.2927e-04,
          1.3373e-03,  1.5886e-03,  3.8111e-04,  2.4879e-03],
        [-2.1691e-03, -1.1561e-03,  2.6133e-04, -1.1817e-03, -9.2352e-04,
          1.6682e-03, -2.1378e-03, -2.9436e-03,  1.3815e-03, -9.5068e-04,
         -5.8985e-04,  6.5699e-04, -1.1827e-03,  8.8809e-04, -2.7521e-04,
          4.2566e-04, -7.2269e-04,  1.6220e-03,  6.6476e-04, -2.7360e-03,
         -2.1367e-03, -1.7455e-03,  3.8307e-04, -1.9238e-03, -1.4183e-03,
          1.9274e-04, -2.6808e-03,  7.8105e-04,  1.3613e-03,  9.6145e-04,
          7.0011e-04, -1.0840e-03,  3.1888e-04,  7.3087e-04,  1.6627e-03,
         -2.3318e-03, -2.2271e-04,  1.0101e-04, -2.1247e-05, -8.6508e-04,
         -1.2631e-03,  1.1249e-04,  6.0452e-04, -1.1190e-04,  8.5820e-04,
          1.2084e-03,  1.3629e-03, -1.7475e-03, -2.1997e-03, -2.9240e-04,
         -9.9286e-04, -5.2649e-04,  5.9745e-04, -7.1284e-06,  4.8062e-04,
         -4.1013e-04,  1.2042e-03, -5.1450e-04, -9.0805e-05, -1.1083e-03,
         -7.0325e-04,  9.0359e-04,  1.3208e-03,  1.0327e-03],
        [ 4.8075e-04, -1.5636e-04,  5.6092e-04, -2.6393e-04,  1.0679e-03,
          1.3478e-03, -2.4867e-03,  6.7502e-04, -6.8737e-04,  1.4393e-03,
          1.1278e-03, -2.1883e-03,  5.9360e-04,  6.3813e-04, -1.0866e-03,
          1.9878e-05, -7.2318e-04,  2.6809e-03, -1.1438e-03,  7.3039e-05,
         -1.7132e-03,  2.1576e-03, -2.2239e-03,  1.2086e-03, -8.6233e-04,
         -2.1981e-03,  1.9285e-04, -1.9624e-03,  7.1151e-04,  1.8657e-03,
          8.3639e-04,  7.4306e-04,  3.7102e-03,  5.7239e-04,  6.1653e-04,
         -8.3319e-05,  1.3967e-04, -7.6406e-04, -1.4036e-03,  1.1402e-03,
         -2.0670e-04,  2.8623e-03, -1.4062e-03,  6.8336e-04,  4.2082e-04,
         -1.1133e-03, -1.4089e-03,  3.6781e-04,  1.0985e-03, -4.8267e-04,
          2.4394e-04,  5.4904e-04,  3.4994e-04,  1.8306e-04, -6.0089e-04,
          2.4776e-05,  3.8112e-04,  1.5717e-03,  4.8882e-04, -1.5510e-03,
         -7.6518e-04,  4.3366e-05,  3.3201e-04,  8.0601e-04],
        [ 1.6424e-05,  3.8347e-04, -1.3025e-04, -3.1424e-03,  1.5780e-05,
          2.3866e-04, -1.2253e-03, -2.8462e-04,  2.5678e-04,  2.2358e-05,
         -9.7132e-04, -5.1130e-04, -1.2094e-03,  7.6672e-04,  6.9370e-04,
         -1.7962e-03,  1.0876e-03, -3.4563e-04, -4.5482e-04, -4.1761e-04,
         -3.2196e-04,  4.7263e-04, -2.8386e-03,  1.0029e-03, -1.4447e-03,
         -1.2704e-03,  1.8270e-03, -5.8751e-04,  6.7934e-04, -4.3495e-04,
         -3.5504e-04,  9.3224e-05, -9.2806e-04, -1.2232e-03,  1.4232e-03,
          2.6925e-03, -1.2072e-03,  1.4474e-04,  2.5774e-03, -1.8696e-05,
         -9.8563e-05, -2.6316e-03,  1.5185e-03,  3.7325e-03,  1.2337e-03,
          1.1603e-03, -1.0759e-03, -5.9560e-06, -5.5662e-04, -1.5892e-03,
          1.3074e-04, -8.2813e-04,  1.4230e-03, -7.9751e-04,  1.3226e-03,
         -1.7033e-03, -8.3261e-04, -6.4529e-04, -1.7594e-07, -1.8340e-04,
          3.1897e-04, -1.0799e-03, -1.1251e-03,  7.5491e-04],
        [ 9.5899e-04,  3.5347e-04, -1.3796e-04,  4.1998e-04,  5.8379e-04,
         -1.0892e-03, -1.9544e-03, -2.4286e-04,  2.4668e-03,  1.9168e-03,
          8.1100e-04, -5.6872e-04,  1.6593e-05,  1.6195e-03,  4.3298e-04,
         -6.1165e-04,  1.1887e-03, -2.5836e-03,  5.9807e-04,  1.4070e-04,
          8.1196e-04,  5.0582e-04, -9.1305e-04, -1.4052e-05,  1.7681e-04,
         -9.4790e-04,  8.4551e-04, -1.0935e-03,  4.1593e-04, -3.1406e-05,
          3.6492e-05, -5.4500e-04, -9.1014e-04, -1.0936e-03,  9.4546e-04,
         -8.7539e-05,  3.3613e-03, -1.4589e-03, -1.7623e-03, -8.4566e-04,
         -7.6482e-04, -8.7470e-04, -6.9144e-04, -4.6296e-04, -7.5374e-04,
          1.8090e-05,  1.2048e-03, -2.7293e-04, -2.5732e-03,  1.8977e-03,
          9.6628e-04, -3.5210e-04, -1.0115e-04, -1.3699e-04, -3.2795e-03,
         -3.3759e-03,  1.1564e-03,  1.0438e-03, -3.1188e-04,  1.2924e-03,
          1.8172e-04,  1.2615e-04,  1.9138e-03,  4.7437e-04],
        [ 5.2532e-05,  2.0138e-05,  1.2690e-03,  3.5056e-04,  7.0208e-04,
         -8.6923e-04, -8.9231e-04,  8.7333e-04, -1.6174e-04,  1.5591e-04,
         -2.1117e-03, -1.7689e-03, -1.4624e-03,  1.3270e-03, -2.5036e-03,
         -1.5475e-03,  1.1624e-03, -2.8537e-03, -3.8475e-04, -5.0810e-04,
         -1.7571e-04, -1.1350e-03,  2.6174e-04, -1.4310e-03, -9.5727e-04,
         -8.8945e-04,  6.4532e-04,  1.5897e-03,  3.2953e-05,  1.1635e-03,
         -1.8124e-03,  1.9490e-03,  1.6742e-04, -3.0517e-03, -2.0479e-03,
         -2.6047e-04, -6.9983e-04,  1.3521e-04, -1.6474e-03,  8.7968e-04,
         -1.4586e-03,  4.6325e-04, -1.1085e-04, -2.6615e-03,  1.8865e-03,
          1.0464e-03,  5.4234e-06, -1.2281e-03,  4.2599e-04, -3.7746e-04,
         -1.3982e-03, -5.4260e-05, -2.0657e-04,  1.2219e-03, -1.2345e-04,
          9.1006e-04, -3.9967e-04, -2.5279e-04,  1.3440e-03, -8.6334e-04,
         -1.0121e-03, -7.3607e-04, -2.0909e-03,  1.5018e-03],
        [-4.2156e-05,  1.3325e-03, -2.8341e-04,  1.6215e-03, -1.8072e-03,
         -4.0201e-04, -3.0376e-03, -1.9762e-03, -1.1017e-03, -1.3361e-04,
          9.9077e-04, -1.0431e-04,  5.4981e-04, -1.5396e-03, -1.6667e-03,
          1.0825e-03,  3.3871e-04,  9.9414e-04, -1.2609e-03,  1.4226e-03,
          1.1146e-03,  2.0428e-03,  9.4840e-04, -4.1771e-04,  6.1436e-04,
         -4.1660e-04,  6.1770e-04,  2.8170e-03,  3.1156e-03, -7.7324e-04,
         -3.6797e-04,  6.2758e-04, -6.6193e-04, -5.6361e-04,  8.0183e-04,
          3.5300e-04,  1.2491e-03, -1.3794e-03,  1.4287e-03, -9.7615e-05,
         -3.4646e-04, -2.6165e-04,  4.9091e-04, -1.2315e-03,  1.5807e-03,
          6.3122e-04, -1.2258e-03, -7.2643e-04,  3.9095e-04, -1.1701e-03,
         -4.5472e-04, -1.8600e-03,  1.8395e-03,  1.5337e-04, -3.6852e-04,
          1.2432e-03,  1.7445e-03,  1.1209e-03, -1.8088e-04,  1.0793e-03,
          2.1266e-03, -1.0961e-03,  7.9835e-06, -1.9466e-03]], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.1114,  0.2113, -0.0578,  ...,  0.0931, -0.0227, -0.1242],
        [-0.0439,  0.0754,  0.0390,  ..., -0.1373,  0.3180,  0.3326],
        [-0.2078, -0.1760,  0.0844,  ..., -0.5382,  0.1516, -0.2026],
        ...,
        [ 0.1948, -0.2169,  0.0370,  ..., -0.2278,  0.0438,  0.0112],
        [ 0.3850, -0.1469, -0.1609,  ...,  0.0394, -0.3441,  0.2183],
        [ 0.1501, -0.2136, -0.0055,  ...,  0.0523, -0.1449, -0.1083]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.2650,  0.0900, -0.1266,  ..., -0.2097,  0.1316,  0.3774],
        [-0.0469, -0.1111, -0.2163,  ..., -0.0883,  0.5407,  0.3436],
        [-0.1364, -0.1119,  0.1191,  ...,  0.1359, -0.0723,  0.3765],
        ...,
        [ 0.2303,  0.0965,  0.0418,  ..., -0.0158,  0.0252,  0.0481],
        [-0.2180,  0.0861, -0.0241,  ...,  0.3080, -0.0588,  0.1946],
        [-0.0476,  0.0957,  0.1876,  ...,  0.2798, -0.0599, -0.2005]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.2650,  0.0900, -0.1266,  ..., -0.2097,  0.1316,  0.3774],
        [-0.0469, -0.1111, -0.2163,  ..., -0.0883,  0.5407,  0.3436],
        [-0.1364, -0.1119,  0.1191,  ...,  0.1359, -0.0723,  0.3765],
        ...,
        [ 0.2303,  0.0965,  0.0418,  ..., -0.0158,  0.0252,  0.0481],
        [-0.2180,  0.0861, -0.0241,  ...,  0.3080, -0.0588,  0.1946],
        [-0.0476,  0.0957,  0.1876,  ...,  0.2798, -0.0599, -0.2005]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0802, -0.0410,  0.0434,  ..., -0.0819,  0.0145, -0.2158],
        [ 0.0223,  0.0981,  0.0987,  ...,  0.0507, -0.0872,  0.0654],
        [ 0.0025, -0.0643, -0.0170,  ..., -0.0575, -0.1236, -0.0113],
        ...,
        [-0.0595, -0.0645,  0.0144,  ..., -0.0696, -0.1035,  0.0813],
        [-0.0885,  0.1007, -0.0770,  ..., -0.1343, -0.0779,  0.0534],
        [-0.0218,  0.0519, -0.0437,  ...,  0.0417,  0.0746, -0.0332]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0658, -0.0428,  0.0178,  ...,  0.0380,  0.1135, -0.1813],
        [-0.0317, -0.0901, -0.1135,  ...,  0.0137,  0.0868, -0.0181],
        [-0.1546,  0.0243, -0.0192,  ..., -0.0493, -0.0150,  0.1533],
        ...,
        [-0.0905, -0.1153,  0.0548,  ..., -0.1306, -0.0099, -0.0758],
        [-0.0960,  0.0009,  0.0194,  ...,  0.0606, -0.1711,  0.0340],
        [ 0.1039,  0.1046,  0.0198,  ...,  0.1308, -0.0159,  0.0532]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 9.9758e-05,  9.3333e-04, -2.2378e-04, -4.1672e-04, -6.0598e-04,
          4.1014e-04, -1.0517e-03,  9.6109e-04,  5.9293e-04, -2.0042e-04,
          9.5252e-04,  1.1927e-04,  1.1096e-03, -6.4452e-04, -7.7258e-04,
         -2.0261e-03, -5.1041e-04, -2.9152e-03,  8.6729e-04, -2.5916e-04,
          9.2309e-04,  1.3888e-03, -1.9062e-03, -1.2975e-03,  2.7978e-03,
          7.9323e-04, -8.5929e-04, -8.9528e-04,  7.8422e-04,  2.6352e-03,
          3.0262e-04,  2.3404e-03,  1.5918e-03,  2.5706e-03, -2.4098e-04,
          1.8411e-04,  7.3470e-04, -5.7335e-04, -8.9591e-04,  3.5211e-04,
          1.9848e-04,  2.1905e-03,  1.0523e-03,  3.4008e-04,  2.0574e-03,
         -3.1650e-04,  4.1678e-04,  9.8348e-04, -2.7189e-03, -3.0397e-05,
         -1.4821e-05,  1.6194e-03, -2.1932e-04, -1.3824e-04, -9.1716e-04,
         -2.0104e-03,  1.6063e-03,  6.0420e-04,  1.3466e-03, -1.0170e-03,
          1.4513e-03, -2.1735e-04, -8.9067e-04, -1.2641e-03],
        [-4.7199e-04, -8.2350e-04,  7.2529e-04,  6.1408e-06, -1.6066e-03,
          8.7255e-04,  3.4261e-04,  1.8419e-03,  1.9124e-03, -1.7449e-03,
         -2.2483e-04, -9.1297e-04, -1.3232e-03, -1.2202e-04,  7.9684e-04,
          3.7153e-04, -4.1845e-04, -5.8857e-04, -3.4666e-04, -1.2260e-03,
          4.0440e-04,  7.8198e-05, -8.2652e-04, -1.7649e-03, -3.7843e-03,
         -5.0049e-04,  1.6256e-03, -1.6740e-03, -7.3042e-04,  2.3928e-03,
          7.2841e-04, -5.5983e-04, -2.8372e-04, -6.1409e-04,  5.3118e-04,
         -3.2416e-03, -2.5038e-04, -1.6197e-04, -4.5583e-04, -3.0692e-04,
          1.2602e-03,  7.1679e-04, -4.8629e-04, -1.7031e-03,  8.5342e-04,
          9.7634e-04, -5.7553e-04, -1.5995e-03, -6.9920e-04,  9.3537e-04,
          2.3844e-05,  3.1284e-04, -5.5112e-04,  1.7761e-03, -2.0360e-03,
          1.4394e-03,  4.5909e-04, -1.8805e-03,  2.1937e-03, -1.0724e-03,
         -2.0604e-03,  1.2054e-03, -5.9086e-04,  1.4460e-04],
        [-6.1974e-04,  2.3904e-03, -3.3660e-03,  1.0737e-03, -3.7920e-04,
          7.7963e-05,  1.1775e-03,  1.6556e-03,  1.6807e-03, -2.0763e-03,
         -1.2951e-03, -1.3944e-03,  1.3117e-03, -2.7129e-04,  8.9824e-04,
          7.3104e-04, -9.3037e-04,  3.2418e-04,  1.7771e-04, -2.2404e-03,
          3.2518e-04,  3.7693e-04, -8.1250e-04,  1.4297e-03,  2.2187e-03,
         -7.2461e-04, -5.7667e-04, -7.3788e-04,  3.7706e-04,  2.5093e-03,
          1.5046e-05,  9.4331e-04, -3.5186e-04, -1.7300e-03, -2.9550e-04,
          1.8795e-03, -7.3020e-04, -3.0570e-04, -1.2377e-04,  4.6797e-04,
         -6.1552e-04, -9.4529e-04, -2.8651e-03, -9.6942e-04,  5.2826e-05,
         -9.4469e-04,  4.6030e-04, -2.1377e-04,  2.0092e-03, -1.1764e-03,
         -4.5841e-04,  3.9964e-04,  1.8362e-03,  4.3317e-04, -7.9897e-04,
          1.3277e-03, -2.4614e-04, -3.9939e-04,  6.6670e-04,  2.3904e-03,
          8.3919e-04,  2.8607e-05,  1.6135e-03, -1.1260e-04],
        [ 9.2558e-05, -2.8300e-04, -1.0195e-03, -1.0512e-03,  3.9580e-04,
          1.6174e-04, -3.0771e-04,  2.1626e-04,  1.1256e-03,  7.2356e-04,
         -1.4054e-03,  1.2239e-03,  2.0173e-03,  1.6686e-03, -2.0201e-04,
         -2.0920e-05, -1.3811e-03,  9.2178e-04,  1.4157e-03, -6.2491e-04,
          2.2270e-04,  1.0016e-03,  2.7674e-04,  2.4112e-03,  6.7472e-04,
          1.0113e-03,  3.0964e-05, -1.1844e-03,  1.4385e-03,  6.6896e-05,
         -5.7670e-04, -1.5202e-03, -6.1473e-04,  2.5139e-05,  2.9104e-03,
         -3.0172e-03, -5.4974e-04, -8.0001e-04, -3.1313e-03, -2.0198e-03,
         -6.6171e-04,  6.8777e-05, -1.0032e-03,  5.1367e-05,  4.8968e-04,
          2.0702e-04,  1.5043e-05, -8.2832e-04, -8.7601e-04,  1.3146e-03,
          3.3583e-04, -2.4903e-03, -7.4872e-04,  4.2125e-04,  4.1665e-04,
         -1.3783e-03,  2.9957e-03,  1.5597e-03, -1.7866e-03,  1.3763e-03,
         -8.4045e-04, -6.1226e-04, -4.5054e-04,  9.9609e-04],
        [ 3.0584e-04, -3.6142e-04,  2.7985e-04, -4.0019e-04,  4.8934e-04,
          5.2827e-04,  1.5276e-03, -8.8649e-04,  1.9281e-04, -4.6692e-04,
          2.0300e-03,  1.5313e-03,  1.2447e-03, -4.9135e-04,  1.3628e-03,
         -2.5464e-03,  6.1545e-04, -3.0593e-04,  9.4007e-05, -2.1926e-03,
          2.4713e-04, -2.7314e-03,  1.1998e-03, -1.0978e-03,  1.0758e-03,
         -1.1211e-03,  2.7853e-03,  2.2867e-03,  4.2186e-06,  1.0407e-03,
         -1.6917e-03, -2.1664e-05, -1.1663e-03, -7.5108e-04,  5.7149e-04,
         -1.7717e-03, -9.0350e-04, -2.3736e-03,  1.3427e-03,  1.1074e-03,
         -4.4643e-04, -8.1360e-04, -1.2269e-04, -3.0318e-04,  1.5931e-03,
         -1.2038e-03,  1.8449e-05, -1.7620e-03,  8.4110e-04,  6.1924e-04,
         -8.1267e-04, -1.3100e-03, -1.4212e-03,  1.2492e-03,  1.5947e-03,
         -7.6706e-04, -6.3908e-04,  8.3076e-04,  6.9930e-04, -4.2934e-04,
          2.5784e-03, -3.1193e-04,  2.9398e-05, -1.6181e-03],
        [-2.4216e-03,  1.4819e-03,  7.0595e-04, -7.4815e-04, -1.6227e-04,
          1.0702e-03,  9.0792e-04, -5.9539e-04, -4.9942e-04,  8.3623e-04,
          9.3974e-04,  6.5423e-05, -1.2802e-03,  1.4311e-06, -2.1674e-04,
          2.5064e-03, -1.5396e-03,  6.4136e-04,  2.7125e-04,  1.8191e-04,
          6.4965e-04, -8.7288e-04,  1.2586e-03,  3.6674e-04, -9.3336e-04,
         -2.2595e-04,  6.4044e-04, -3.2263e-03,  2.9854e-05,  1.0017e-04,
          3.7711e-04,  1.8260e-03, -1.1830e-03,  1.1482e-03, -3.2498e-03,
          4.3737e-04, -1.1495e-03, -1.4351e-03, -2.4049e-03,  1.9185e-03,
          1.1427e-03, -1.6381e-03, -1.5134e-03, -5.8521e-04,  2.7727e-05,
          1.5531e-04,  5.8603e-04,  2.4356e-04, -1.6016e-03,  2.3940e-03,
          1.7027e-03, -5.5764e-04, -1.7937e-04,  1.5471e-04,  5.1261e-04,
         -5.3036e-04, -1.2456e-03,  7.3876e-04, -7.1088e-04, -6.9490e-04,
          2.3659e-03, -1.7311e-03, -4.7507e-04,  5.7477e-04],
        [-3.9393e-03, -1.4881e-03,  5.4475e-04,  5.0831e-04, -5.0310e-04,
          5.4816e-04,  1.1922e-03, -2.4109e-03,  7.5065e-04,  5.3445e-05,
         -1.9832e-04,  8.3812e-04,  1.0149e-03, -2.8735e-04,  1.0067e-03,
         -2.8284e-03, -2.9151e-04, -1.1876e-03,  2.1594e-04,  6.6483e-04,
          9.4204e-04, -1.0228e-03,  5.8396e-04,  4.8376e-04, -2.2927e-03,
          1.9659e-03, -1.1291e-03,  6.4808e-04,  4.7778e-04,  1.8436e-03,
         -2.0671e-04, -1.0156e-03,  5.8945e-04, -1.3845e-04, -5.5137e-04,
          8.4660e-04, -1.7440e-03, -6.9102e-04,  2.5583e-04, -2.5232e-03,
         -1.4630e-03,  4.9394e-04, -2.9435e-04,  1.1018e-03, -2.7685e-03,
         -7.2750e-04,  8.9646e-04,  3.5511e-04, -1.5410e-03, -8.8454e-04,
          2.8614e-04,  1.2606e-03,  1.5013e-03,  2.2518e-04,  3.4355e-04,
          8.9611e-04, -1.1566e-04,  2.0445e-04,  1.7957e-03,  1.0078e-03,
          4.6124e-04, -1.2406e-03, -4.4402e-04,  2.0091e-03],
        [-5.6098e-04,  8.1215e-04, -3.9750e-05,  4.8347e-04,  1.1104e-03,
         -3.4258e-03, -2.5039e-03, -6.1533e-04, -5.1401e-04, -7.4973e-04,
          9.4593e-04,  9.2079e-05, -1.2214e-03, -2.9562e-03,  1.6999e-03,
          7.3763e-04, -4.0224e-04,  3.7490e-04, -7.1893e-05, -7.5916e-04,
         -8.7275e-04, -1.6005e-03, -7.9592e-05,  1.6082e-03, -5.1972e-04,
         -5.3746e-05,  1.6871e-04,  1.2087e-03, -1.0279e-03,  1.6612e-03,
         -8.8678e-04,  1.5967e-03,  1.6131e-03, -4.4734e-04, -2.2417e-04,
         -1.6148e-03, -1.4500e-03,  2.3029e-03, -2.0617e-03,  1.3200e-03,
          6.0293e-05,  1.9213e-04,  1.7437e-03,  1.8869e-04,  2.1837e-04,
         -5.3222e-04, -1.8649e-03, -4.7096e-04, -3.4531e-05,  5.3051e-06,
          3.1963e-04, -6.1949e-04,  2.5406e-03, -7.1456e-04,  1.3991e-03,
          1.5231e-03,  2.2780e-03,  4.8686e-04, -2.3142e-04,  4.0005e-04,
          1.1228e-04, -2.2524e-04, -2.1505e-03,  2.1372e-05],
        [-3.8056e-04,  1.1219e-03,  2.3419e-03, -4.7084e-04,  1.3566e-03,
         -1.5894e-03,  1.0326e-03,  1.6020e-04, -1.3161e-03, -2.3531e-03,
          1.7891e-03, -2.7227e-04,  2.6232e-04, -1.3362e-03, -1.6689e-03,
          1.3444e-03, -7.5038e-04,  1.7756e-04,  1.0672e-03,  2.9299e-04,
          3.1337e-03, -3.4325e-04, -5.9885e-04, -6.5401e-04, -1.4078e-03,
          4.7049e-04, -4.9720e-04,  7.8405e-04,  2.6461e-03,  1.0610e-03,
         -6.1766e-04, -1.8943e-03, -1.2739e-03, -6.1274e-04,  1.2932e-03,
          1.3922e-03,  8.1697e-04,  1.4095e-03,  1.6552e-03, -1.0144e-03,
          1.4495e-03, -5.9176e-04,  8.7561e-04, -1.6499e-03,  2.1129e-03,
         -1.2149e-03,  1.8010e-03, -1.9569e-04, -6.9195e-04,  1.3397e-03,
         -5.1900e-04, -8.1721e-04,  1.2497e-03, -1.4757e-03, -5.7968e-04,
         -1.1233e-03,  9.0315e-04, -1.2466e-03, -9.2132e-04,  1.1066e-03,
          4.9892e-04, -3.8984e-04,  1.0932e-03,  9.7680e-04]], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0',
       requires_grad=True)]
========== None
66
double Q learning will be used
warm up...
Traceback (most recent call last):
  File "/home/uosai/바탕화면/off-policy/offpolicy/scripts/train/train_smac.py", line 212, in <module>
    main(sys.argv[1:])
  File "/home/uosai/바탕화면/off-policy/offpolicy/scripts/train/train_smac.py", line 189, in main
    runner = Runner(config=config)
  File "/home/uosai/바탕화면/off-policy/offpolicy/runner/rnn/smac_runner.py", line 14, in __init__
    self.warmup(num_warmup_episodes)
  File "/home/uosai/바탕화면/off-policy/offpolicy/runner/rnn/base_runner.py", line 251, in warmup
    env_info = self.collecter(explore=True, training_episode=False, warmup=True)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "/home/uosai/바탕화면/off-policy/offpolicy/runner/rnn/smac_runner.py", line 58, in collect_rollout
    obs, share_obs, avail_acts = env.reset()
  File "/home/uosai/바탕화면/off-policy/offpolicy/envs/env_wrappers.py", line 461, in reset
    results = [env.reset() for env in self.envs]
  File "/home/uosai/바탕화면/off-policy/offpolicy/envs/env_wrappers.py", line 461, in <listcomp>
    results = [env.reset() for env in self.envs]
  File "/home/uosai/바탕화면/off-policy/offpolicy/envs/starcraft2/StarCraft2_Env.py", line 376, in reset
    self._launch()
  File "/home/uosai/바탕화면/off-policy/offpolicy/envs/starcraft2/StarCraft2_Env.py", line 343, in _launch
    self._controller.join_game(join)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/pysc2/lib/remote_controller.py", line 95, in _valid_status
    return func(self, *args, **kwargs)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/pysc2/lib/remote_controller.py", line 70, in _check_error
    return check_error(func(*args, **kwargs), error_enum)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/pysc2/lib/stopwatch.py", line 205, in _stopwatch
    return func(*args, **kwargs)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/pysc2/lib/remote_controller.py", line 205, in join_game
    return self._client.send(join_game=req_join_game)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/pysc2/lib/protocol.py", line 147, in send
    res = self.send_req(req)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/pysc2/lib/protocol.py", line 127, in send_req
    return self.read()
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/pysc2/lib/stopwatch.py", line 205, in _stopwatch
    return func(*args, **kwargs)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/pysc2/lib/protocol.py", line 98, in read
    response = self._read()
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/pysc2/lib/protocol.py", line 179, in _read
    response_str = self._sock.recv()
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/websocket/_core.py", line 388, in recv
    opcode, data = self.recv_data()
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/websocket/_core.py", line 416, in recv_data
    opcode, frame = self.recv_data_frame(control_frame)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/websocket/_core.py", line 437, in recv_data_frame
    frame = self.recv_frame()
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/websocket/_core.py", line 478, in recv_frame
    return self.frame_buffer.recv_frame()
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/websocket/_abnf.py", line 363, in recv_frame
    self.recv_header()
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/websocket/_abnf.py", line 319, in recv_header
    header = self.recv_strict(2)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/websocket/_abnf.py", line 398, in recv_strict
    bytes_ = self.recv(min(16384, shortage))
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/websocket/_core.py", line 563, in _recv
    return recv(self.sock, bufsize)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/websocket/_socket.py", line 115, in recv
    bytes_ = _recv()
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/websocket/_socket.py", line 94, in _recv
    return sock.recv(bufsize)
KeyboardInterrupt