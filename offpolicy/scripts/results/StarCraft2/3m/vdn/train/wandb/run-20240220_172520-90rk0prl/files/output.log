self.policy_ids:  ['policy_0', 'policy_1', 'policy_2']
==========
==========
==========
66
double Q learning will be used
warm up...
Traceback (most recent call last):
  File "/home/uosai/바탕화면/off-policy/offpolicy/scripts/train/train_smac.py", line 212, in <module>
    main(sys.argv[1:])
  File "/home/uosai/바탕화면/off-policy/offpolicy/scripts/train/train_smac.py", line 189, in main
    runner = Runner(config=config)
  File "/home/uosai/바탕화면/off-policy/offpolicy/runner/rnn/smac_runner.py", line 14, in __init__
    self.warmup(num_warmup_episodes)
  File "/home/uosai/바탕화면/off-policy/offpolicy/runner/rnn/base_runner.py", line 251, in warmup
    env_info = self.collecter(explore=True, training_episode=False, warmup=True)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "/home/uosai/바탕화면/off-policy/offpolicy/runner/rnn/smac_runner.py", line 83, in collect_rollout
    _, rnn_states_batch, _ = policy.get_actions(obs_batch,
  File "/home/uosai/바탕화면/off-policy/offpolicy/algorithms/qmix/algorithm/QMixPolicy.py", line 97, in get_actions
    q_values_out, new_rnn_states = self.get_q_values(obs, prev_actions, rnn_states)
  File "/home/uosai/바탕화면/off-policy/offpolicy/algorithms/qmix/algorithm/QMixPolicy.py", line 60, in get_q_values
    q_batch, new_rnn_states = self.q_network(input_batch, rnn_states)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/uosai/바탕화면/off-policy/offpolicy/algorithms/qmix/algorithm/agent_q_function.py", line 59, in forward
    rnn_outs, h_final = self.rnn(inp, rnn_states)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/uosai/바탕화면/off-policy/offpolicy/algorithms/utils/rnn.py", line 45, in forward
    x, hxs = self.rnn(x,hxs)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/uosai/바탕화면/off-policy/offpolicy/algorithms/utils/rnn.py", line 21, in forward
    x, hxs = self.rnn(x, hxs)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/torch/nn/modules/rnn.py", line 1100, in forward
    self.check_forward_args(input, hx, batch_sizes)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/torch/nn/modules/rnn.py", line 273, in check_forward_args
    self.check_hidden_size(hidden, expected_hidden_size)
  File "/home/uosai/바탕화면/miniconda3/envs/marl/lib/python3.9/site-packages/torch/nn/modules/rnn.py", line 256, in check_hidden_size
    raise RuntimeError(msg.format(expected_hidden_size, list(hx.size())))
RuntimeError: Expected hidden size (1, 3, 64), got [1, 1, 64]